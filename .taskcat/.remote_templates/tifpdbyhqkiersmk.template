AWSTemplateFormatVersion: '2010-09-09'
Description: This workload template deploys an ASG behind an ELB load balancer in
  two private subnets. The cluster is configured to use an S3 bucket for storage **WARNING**
  This template creates EC2 instances and related resources. You will be billed for
  the AWS resources used if you create a stack from this template.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Network configuration
      Parameters:
      - VPCID
      - PrivateSubnet1ID
      - PrivateSubnet2ID
      - PublicSubnet1ID
      - PublicSubnet2ID
    - Label:
        default: Amazon EC2 configuration
      Parameters:
      - KeyPairName
      - SecurityGroupID
      - WorkloadInstanceType
    - Label:
        default: Workload nodes configuration
      Parameters:
      - WorkloadNodesMinSize
      - WorkloadNodesMaxSize
      - WorkloadNodesDesiredCapacity
      - OperatorEmail
    - Label:
        default: Workload storage configuration
      Parameters:
      - S3BucketName
    - Label:
        default: AWS Quick Start configuration
      Parameters:
      - QSS3BucketName
      - QSS3KeyPrefix
    ParameterLabels:
      SecurityGroupID:
        default: Bastion security group ID
      KeyPairName:
        default: SSH key name
      OperatorEmail:
        default: Operator email
      PrivateSubnet1ID:
        default: Private subnet 1 ID
      PrivateSubnet2ID:
        default: Private subnet 2 ID
      PublicSubnet1ID:
        default: Public subnet 1 ID
      PublicSubnet2ID:
        default: Public subnet 2 ID
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
      S3BucketName:
        default: S3 bucket name
      VPCID:
        default: VPC ID
      WorkloadInstanceType:
        default: Workload servers instance type
      WorkloadNodesDesiredCapacity:
        default: Workload nodes desired capacity
      WorkloadNodesMaxSize:
        default: Workload nodes max size
      WorkloadNodesMinSize:
        default: Workload nodes min size
Parameters:
  SecurityGroupID:
    Description: ID of the security group to enable SSH/RDGW connections (e.g.,
      sg-7f16e910).
    Type: AWS::EC2::SecurityGroup::Id
  KeyPairName:
    Description: Name of an existing EC2 key pair. All instances will launch with
      this key pair.
    Type: AWS::EC2::KeyPair::KeyName
  OperatorEmail:
    AllowedPattern: ([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)
    ConstraintDescription: Must be a valid email address.
    Description: Email address that notifications of any scaling operations will be
      sent to.
    Type: String
  PrivateSubnet1ID:
    Description: ID of private subnet 1 in Availability Zone 1 for the workload (e.g.,
      subnet-a0246dcd).
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet2ID:
    Description: ID of private subnet 2 in Availability Zone 2 for the workload (e.g.,
      subnet-b1f432cd).
    Type: AWS::EC2::Subnet::Id
  PublicSubnet1ID:
    Description: ID of public subnet 1 in Availability Zone 1 for the ELB load balancer
      (e.g., subnet-9bc642ac).
    Type: AWS::EC2::Subnet::Id
  PublicSubnet2ID:
    Description: ID of public subnet 2 in Availability Zone 2 for the ELB load balancer
      (e.g., subnet-e3246d8e).
    Type: AWS::EC2::Subnet::Id
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-workshop/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  S3BucketName:
    AllowedPattern: ^[a-z0-9][a-z0-9-.]*$
    Description: Name of the S3 bucket that will be created for your workload to store
      data. Enter a unique name that does not include uppercase characters.
    Type: String
  VPCID:
    Description: ID of your existing VPC for deployment.
    Type: AWS::EC2::VPC::Id
  WorkloadInstanceType:
    AllowedValues:
    - t2.large
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    - r3.large
    - r3.xlarge
    ConstraintDescription: Must contain valid instance type
    Default: m4.xlarge
    Description: Type of EC2 instance for the workload instances.
    Type: String
  WorkloadNodesDesiredCapacity:
    Default: '2'
    Description: Desired capacity for the workload nodes Auto Scaling group.
    Type: String
  WorkloadNodesMaxSize:
    Default: '4'
    Description: Maximum size of the Auto Scaling group.
    Type: String
  WorkloadNodesMinSize:
    Default: '2'
    Description: Minimum size of the Auto Scaling group.
    Type: String
Rules:
  KeyPairsNotEmpty:
    Assertions:
    - Assert:
        Fn::Not:
        - Fn::EachMemberEquals:
          - Fn::RefAll: AWS::EC2::KeyPair::KeyName
          - ''
      AssertDescription: All key pair parameters must not be empty
  SubnetsInVPC:
    Assertions:
    - Assert:
        Fn::EachMemberIn:
        - Fn::ValueOfAll:
          - AWS::EC2::Subnet::Id
          - VpcId
        - Fn::RefAll: AWS::EC2::VPC::Id
      AssertDescription: All subnets must in the VPC
Mappings:
  AWSAMIRegionMap:
    af-south-1:
      AMZNLINUX2: ami-0936d2754993c364e
      AMZNLINUX2ARM: ami-01d326fa7db123542
      US2004HVM: ami-022666956ad401a16
      CENTOS7HVM: ami-0a2be7731769e6cc1
#      SLES15HVM: ami-EXAMPLE
    ap-northeast-1:
      AMZNLINUX2: ami-0ca38c7440de1749a
      AMZNLINUX2ARM: ami-005322a6d5cecfe58
      US2004HVM: ami-015f1a68ce825a8d2
      CENTOS7HVM: ami-06a46da680048c8ae
      SLES15HVM: ami-056ac8ad44e6a7e1f
    ap-northeast-2:
      AMZNLINUX2: ami-0f2c95e9fe3f8f80e
      AMZNLINUX2ARM: ami-01b0796a552129792
      US2004HVM: ami-0be9734c9e68b99f4
      CENTOS7HVM: ami-06e83aceba2cb0907
      SLES15HVM: ami-0f81fff879bafe6b8
    ap-northeast-3:
      AMZNLINUX2: ami-06e9ad0943b200859
      AMZNLINUX2ARM: ami-02415340f44a47b93
      US2004HVM: ami-01cb3e73f8ef13fdc
      CENTOS7HVM: ami-02d6b455335e3af14
      SLES15HVM: ami-0d8518dd12d11dfc2
    ap-south-1:
      AMZNLINUX2: ami-010aff33ed5991201
      AMZNLINUX2ARM: ami-01ad94fdf8150776c
      US2004HVM: ami-00aaac1f2ef4ce965
      CENTOS7HVM: ami-026f33d38b6410e30
      SLES15HVM: ami-01be89269d32f2a16
    ap-southeast-1:
      AMZNLINUX2: ami-02f26adf094f51167
      AMZNLINUX2ARM: ami-006eccfc9e6f597af
      US2004HVM: ami-0012ffabeb7413479
      CENTOS7HVM: ami-07f65177cb990d65b
      SLES15HVM: ami-070356c21596ddc67
    ap-southeast-2:
      AMZNLINUX2: ami-0186908e2fdeea8f3
      AMZNLINUX2ARM: ami-00719b70b31680d14
      US2004HVM: ami-03ec1fe05b3849c74
      CENTOS7HVM: ami-0b2045146eb00b617
      SLES15HVM: ami-0c4245381c67efb39
    ca-central-1:
      AMZNLINUX2: ami-0101734ab73bd9e15
      AMZNLINUX2ARM: ami-039750f0a88733fff
      US2004HVM: ami-04c56d394d31cdeac
      CENTOS7HVM: ami-04a25c39dc7a8aebb
      SLES15HVM: ami-0c97d9b588207dad6
    eu-central-1:
      AMZNLINUX2: ami-043097594a7df80ec
      AMZNLINUX2ARM: ami-000cbb96a79217336
      US2004HVM: ami-0980c5102b5ef10cc
      CENTOS7HVM: ami-0e8286b71b81c3cc1
      SLES15HVM: ami-05dfd265ea534a3e9
    me-south-1:
      AMZNLINUX2: ami-0880769bc15eeec4f
      AMZNLINUX2ARM: ami-001dc219c441b922d
      US2004HVM: ami-03cc0b5db8321f2e5
      CENTOS7HVM: ami-011c71a894b10f35b
      SLES15HVM: ami-0252c6d3a59c7473b
    ap-east-1:
      AMZNLINUX2: ami-0aca22cb23f122f27
      AMZNLINUX2ARM: ami-01f5cec80321bd86e
      US2004HVM: ami-0c7e5903bee96ef81
      CENTOS7HVM: ami-0e5c29e6c87a9644f
      SLES15HVM: ami-0ad6e15bcbb2dbe38
    eu-north-1:
      AMZNLINUX2: ami-050fdc53cf6ba8f7f
      AMZNLINUX2ARM: ami-00a8ac2b5311cd613
      US2004HVM: ami-0663a4867a210287a
      CENTOS7HVM: ami-05788af9005ef9a93
      SLES15HVM: ami-0741fa1a008af40ad
    eu-south-1:
      AMZNLINUX2: ami-0f447354763f0eaac
      AMZNLINUX2ARM: ami-011d4067dedd119f5
      US2004HVM: ami-035e213233577516f
      CENTOS7HVM: ami-03014b98e9665115a
      SLES15HVM: ami-051cbea0e7660063d
    eu-west-1:
      AMZNLINUX2: ami-063d4ab14480ac177
      AMZNLINUX2ARM: ami-00552336fb4b81164
      US2004HVM: ami-0213344887e47003a
      CENTOS7HVM: ami-0b850cf02cc00fdc8
      SLES15HVM: ami-0a58a1b152ba55f1d
    eu-west-2:
      AMZNLINUX2: ami-06dc09bb8854cbde3
      AMZNLINUX2ARM: ami-03144ab666315a8a3
      US2004HVM: ami-0add0a5a0cf9afc6c
      CENTOS7HVM: ami-09e5afc68eed60ef4
      SLES15HVM: ami-01497522185aaa4ee
    eu-west-3:
      AMZNLINUX2: ami-0b3e57ee3b63dd76b
      AMZNLINUX2ARM: ami-009b1ed4d1f59029a
      US2004HVM: ami-01019e7343a5f361d
      CENTOS7HVM: ami-0cb72d2e599cffbf9
      SLES15HVM: ami-0f238bd4c6fdbefb0
    sa-east-1:
      AMZNLINUX2: ami-05373777d08895384
      AMZNLINUX2ARM: ami-0092271c8131fcde7
      US2004HVM: ami-0312c74c38dc7bae6
      CENTOS7HVM: ami-0b30f38d939dd4b54
      SLES15HVM: ami-0772af912976aa692
    us-east-1:
      AMZNLINUX2: ami-0d5eff06f840b45e9
      AMZNLINUX2ARM: ami-002cc39e7bf021a77
      US2004HVM: ami-0db6c6238a40c0681
      CENTOS7HVM: ami-0affd4508a5d2481b
      SLES15HVM: ami-0b1764f3d7d2e2316
    us-gov-west-1:
      AMZNLINUX2: ami-0bbf3595bb2fb39ec
      AMZNLINUX2ARM: ami-6bd0e80a
      SLES15HVM: ami-57c0ba36
    us-gov-east-1:
      AMZNLINUX2: ami-0cc17d57bec8c6017
      AMZNLINUX2ARM: ami-4a31d93b
      SLES15HVM: ami-05e4bedfad53425e9
    us-east-2:
      AMZNLINUX2: ami-077e31c4939f6a2f3
      AMZNLINUX2ARM: ami-0029d4ab5707ce922
      US2004HVM: ami-03b6c8bd55e00d5ed
      CENTOS7HVM: ami-01e36b7901e884a10
      SLES15HVM: ami-05ea824317ffc0c20
    us-west-1:
      AMZNLINUX2: ami-04468e03c37242e1e
      AMZNLINUX2ARM: ami-00872c48515f06ba0
      US2004HVM: ami-0f5868930cb63c89c
      CENTOS7HVM: ami-098f55b4287a885ba
      SLES15HVM: ami-00e34a7624e5a7107
    us-west-2:
      AMZNLINUX2: ami-0cf6f5c8a62fa5da6
      AMZNLINUX2ARM: ami-0043879194eb2ad40
      US2004HVM: ami-038a0ccaaedae6406
      CENTOS7HVM: ami-0bc06212a56393ee1
      SLES15HVM: ami-0f1e3b3fb0fec0361
    cn-north-1:
      AMZNLINUX2: ami-0c52e2685c7218558
      AMZNLINUX2ARM: ami-088cc0c104292da9c
      CENTOS7HVM: ami-08c16f7e830c0e393
      SLES15HVM: ami-021392849b6221a81
    cn-northwest-1:
      AMZNLINUX2: ami-05b9b6d6acf8ae9b6
      AMZNLINUX2ARM: ami-0b5c6ceb80eb57861
      CENTOS7HVM: ami-0f21aa96a61df8c44
      SLES15HVM: ami-00e1de3ee6d0d28ea
Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
Resources:
  NotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
      - Endpoint:
          Ref: OperatorEmail
        Protocol: email
  ELBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow access to the ELB
      VpcId:
        Ref: VPCID
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '443'
        ToPort: '443'
        CidrIp: 0.0.0.0/0
  ElasticLoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      Subnets:
      - Ref: PublicSubnet1ID
      - Ref: PublicSubnet2ID
      SecurityGroups:
      - Ref: ELBSecurityGroup
      AppCookieStickinessPolicy:
      - CookieName: dummy
        PolicyName: WorkloadCookieStickinessPolicy
      Listeners:
      - LoadBalancerPort: '80'
        InstancePort: '80'
        Protocol: HTTP
        PolicyNames:
        - WorkloadCookieStickinessPolicy
      CrossZone: 'true'
      HealthCheck:
        Target: TCP:80
        HealthyThreshold: '2'
        UnhealthyThreshold: '3'
        Interval: '30'
        Timeout: '3'
  SetupRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - s3:GetObject
            Resource:
              - !Sub
                - arn:${AWS::Partition}:s3:::${S3Bucket}/${QSS3KeyPrefix}*
                - S3Bucket: !If
                  - UsingDefaultBucket
                  - !Sub '${QSS3BucketName}-${AWS::Region}'
                  - !Ref QSS3BucketName
            Effect: Allow
        PolicyName: aws-quick-start-s3-policy
      - PolicyName: WorkloadSetup
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - cloudwatch:PutMetricData
            - cloudwatch:EnableAlarmActions
            - cloudwatch:PutMetricAlarm
            Resource: '*'
          - Effect: Allow
            Action:
            - s3:*
            Resource:
            - Fn::Sub: arn:aws:s3:::${S3Bucket}
            - Fn::Sub: arn:aws:s3:::${S3Bucket}/*
  SetupRoleProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
      - Ref: SetupRole
  WorkloadSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow access to the Workload instances
      VpcId:
        Ref: VPCID
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        SourceSecurityGroupId:
          Ref: ELBSecurityGroup
      - IpProtocol: tcp
        FromPort: '443'
        ToPort: '443'
        SourceSecurityGroupId:
          Ref: ELBSecurityGroup
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        SourceSecurityGroupId:
          Ref: SecurityGroupID
  WorkloadASLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          quickstart:
          - install
          - configure
          - cleanup
        install: {}
        configure: {}
        cleanup: {}
    Properties:
      KeyName:
        Ref: KeyPairName
      ImageId:
        Fn::FindInMap:
        - AWSAMIRegionMap
        - Ref: AWS::Region
        - AMZNLINUX2
      InstanceMonitoring: 'true'
      IamInstanceProfile:
        Ref: SetupRoleProfile
      InstanceType:
        Ref: WorkloadInstanceType
      SecurityGroups:
      - Ref: WorkloadSecurityGroup
      UserData:
        Fn::Base64:
          Fn::Sub: |
            #!/bin/bash
            export PATH=$PATH:/usr/local/bin
            which pip &> /dev/null
            if [ $? -ne 0 ] ; then
                echo "PIP NOT INSTALLED"
                [ `which yum` ] && $(yum install -y epel-release; yum install -y python-pip) && echo "PIP INSTALLED"
                [ `which apt-get` ] && apt-get -y update && apt-get -y install python-pip && echo "PIP INSTALLED"
            fi
            pip install --upgrade pip &> /dev/null
            pip install awscli --ignore-installed six &> /dev/null
            easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz
            cfn-init --stack ${AWS::StackName} --resource WorkloadASLaunchConfig --configsets quickstart --region ${AWS::Region}
            # Signal the status from cfn-init
            cfn-signal -e $? --stack ${AWS::StackName} --resource WorkloadAutoScalingGroup --region ${AWS::Region}
  WorkloadScaleUpPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName:
        Ref: WorkloadAutoScalingGroup
      Cooldown: '300'
      ScalingAdjustment: '1'
  WorkloadScaleDownPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName:
        Ref: WorkloadAutoScalingGroup
      Cooldown: '300'
      ScalingAdjustment: '-1'
  CPUAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Scale-up if CPU > 60% for 5 minutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '60'
      EvaluationPeriods: '5'
      Threshold: '60'
      AlarmActions:
      - Ref: WorkloadScaleUpPolicy
      Dimensions:
      - Name: AutoScalingGroupName
        Value:
          Ref: WorkloadAutoScalingGroup
      ComparisonOperator: GreaterThanThreshold
  CPUAlarmLow:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Scale-down if CPU < 40% for 30 minutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '60'
      EvaluationPeriods: '30'
      Threshold: '40'
      AlarmActions:
      - Ref: WorkloadScaleDownPolicy
      Dimensions:
      - Name: AutoScalingGroupName
        Value:
          Ref: WorkloadAutoScalingGroup
      ComparisonOperator: LessThanThreshold
  WorkloadAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Ref: PrivateSubnet1ID
      - Ref: PrivateSubnet2ID
      Cooldown: '600'
      DesiredCapacity:
        Ref: WorkloadNodesDesiredCapacity
      HealthCheckGracePeriod: '600'
      HealthCheckType: EC2
      LaunchConfigurationName:
        Ref: WorkloadASLaunchConfig
      LoadBalancerNames:
      - Ref: ElasticLoadBalancer
      MaxSize:
        Ref: WorkloadNodesMaxSize
      MinSize:
        Ref: WorkloadNodesMinSize
      NotificationConfiguration:
        TopicARN:
          Ref: NotificationTopic
        NotificationTypes:
        - autoscaling:EC2_INSTANCE_LAUNCH
        - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
        - autoscaling:EC2_INSTANCE_TERMINATE
        - autoscaling:EC2_INSTANCE_TERMINATE_ERROR
        - autoscaling:TEST_NOTIFICATION
      Tags:
      - Key: Name
        Value: Workload Server cluster node
        PropagateAtLaunch: 'true'
    CreationPolicy:
      ResourceSignal:
        Count:
          Ref: WorkloadNodesDesiredCapacity
        Timeout: PT2H
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref 'S3BucketName'
      AccessControl: BucketOwnerFullControl
Outputs:
  ELBDNSName:
    Description: ELB DNS Name
    Value:
      Fn::GetAtt:
      - ElasticLoadBalancer
      - DNSName
